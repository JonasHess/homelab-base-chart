{{- if .Values.nginx.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: argocd
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      namespace: argocd
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html-volume
        configMap:
          name: html-configmap

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: html-configmap
  namespace: argocd
data:
  index.html: |
    <html>
    <body>
    <h1>{{ .Values.nginx.message }}</h1>
    </body>
    </html>

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: argocd
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
  - port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nginx-ingressroute
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`nginx.{{ .Values.domain }}`)
      kind: Rule
      services:
        - name: nginx-service
          kind: Service
          port: 80
  tls:
    certResolver: cloudflare
    domains:
      - main: nginx.{{ .Values.domain }}
        sans:
          - nginx.{{ .Values.domain }}
{{- end -}}