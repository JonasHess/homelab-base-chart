apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik-ingress-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-options: Prune=true
spec:
  project: default
  source:
    chart: traefik
    repoURL: https://helm.traefik.io/traefik
    targetRevision: 30.0.2
    helm:
      # Values file as block file
      valuesObject:
        # traefik/values.yaml

        # Enabling Traefik as an Ingress Controller
        deployment:
          enabled: true

        # Configure the ports exposed by Traefik
        ports:
          web:
            port: 80
            nodePort: 32080
            expose:
              enabled: true
          websecure:
            port: 443
            nodePort: 32443
            expose:
              enabled: true

          # Additional custom ports
          plex:
            port: 32400
            expose:
              enabled: true
            exposedPort: 32400
            protocol: TCP
          sftp:
            port: 2222
            expose:
              enabled: true
            exposedPort: 2222
            protocol: TCP
          samba-548:
            port: 548
            expose:
              enabled: true
            exposedPort: 548
            protocol: TCP
          samba-139:
            port: 139
            expose:
              enabled: true
            exposedPort: 139
            protocol: TCP
          samba-445:
            port: 445
            expose:
              enabled: true
            exposedPort: 445
            protocol: TCP

        # Enable SSL/TLS support and configuration for Let's Encrypt
        certificatesResolvers:
          letsencrypt:
            acme:
              email: {{.Values.letsencrypt.email}}
              storage: "/data/acme.json"
              dnsChallenge:
                provider: cloudflare
                delayBeforeCheck: 0
                resolvers:
                  - "1.1.1.1:53" # Cloudflare DNS
                  - "8.8.8.8:53" # Google DNS
              httpChallenge:
                entryPoint: web

        # Enabling Traefik's access logs for monitoring traffic
        accessLogs:
          enabled: true

        # Traefik logs settings
        logs:
          general:
            level: INFO
          access:
            enabled: true
            fields:
              defaultMode: keep

        # Enabling and configuring Traefik's dashboard
        dashboard:
          enabled: true
          domain: "traefik.{{.Values.domain}}" # Replace with your domain

        # Additional Static Configuration for Traefik
        additionalArguments:
          - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
          - "--certificatesresolvers.letsencrypt.acme.email={{.Values.letsencrypt.email}}"
          - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
          - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
          - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0"

        # Configure SSL settings
        ssl:
          insecureSkipVerify: true

        # Configure Server Transport settings
        serversTransport:
          insecureSkipVerify: true

        # Environment variables for the Cloudflare API token
        env:
          - name: CF_API_EMAIL
            value: "{{.Values.cloudflare.email}}" # Replace with your Cloudflare email
          - name: CF_API_KEY
            valueFrom:
              secretKeyRef:
                name: cloudflare-api-credentials
                key: apiKey

        podSecurityContext:
          fsGroup: 65532
          fsGroupChangePolicy: "OnRootMismatch"

        securityContext:
          capabilities:
            drop: [ALL]
            add: [NET_BIND_SERVICE]
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0

        # Traefik Ingress Controller Configurations
        ingressRoute:
          dashboard:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: "traefik"
            tls:
              certResolver: letsencrypt
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
    syncOptions:
      - allowEmpty=true
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 1m # the maximum amount of time allowed for the backoff strategy